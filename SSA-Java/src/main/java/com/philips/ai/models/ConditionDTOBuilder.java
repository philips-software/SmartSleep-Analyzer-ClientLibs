/*
 * SmartSleepAnalyzer
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.philips.ai.models;

import java.util.*;

public class ConditionDTOBuilder {
    //the instance to build
    private ConditionDTO conditionDTO;

    /**
     * Default constructor to initialize the instance
     */
    public ConditionDTOBuilder() {
        conditionDTO = new ConditionDTO();
    }

    /**
     * The identifier of the condition.
     */
    public ConditionDTOBuilder identifier(String identifier) {
        conditionDTO.setIdentifier(identifier);
        return this;
    }

    /**
     * The title of the condition.
     */
    public ConditionDTOBuilder title(String title) {
        conditionDTO.setTitle(title);
        return this;
    }

    /**
     * The risk rating of the condition.
     */
    public ConditionDTOBuilder riskRating(Integer riskRating) {
        conditionDTO.setRiskRating(riskRating);
        return this;
    }

    /**
     * The diagnosis of the condition.
     */
    public ConditionDTOBuilder diagnosis(String diagnosis) {
        conditionDTO.setDiagnosis(diagnosis);
        return this;
    }

    /**
     * The explanation of the condition.
     */
    public ConditionDTOBuilder explanation(String explanation) {
        conditionDTO.setExplanation(explanation);
        return this;
    }

    /**
     * The description of the condition.
     */
    public ConditionDTOBuilder description(String description) {
        conditionDTO.setDescription(description);
        return this;
    }

    /**
     * The living content of the condition.
     */
    public ConditionDTOBuilder living(String living) {
        conditionDTO.setLiving(living);
        return this;
    }

    /**
     * The key for the living video.
     */
    public ConditionDTOBuilder videoLiving(String videoLiving) {
        conditionDTO.setVideoLiving(videoLiving);
        return this;
    }

    /**
     * The key for the about icon.
     */
    public ConditionDTOBuilder iconAbout(String iconAbout) {
        conditionDTO.setIconAbout(iconAbout);
        return this;
    }

    /**
     * The key for the risk icon.
     */
    public ConditionDTOBuilder iconRisks(String iconRisks) {
        conditionDTO.setIconRisks(iconRisks);
        return this;
    }

    /**
     * The key for the what you can do icon.
     */
    public ConditionDTOBuilder iconWhatYouCanDo(String iconWhatYouCanDo) {
        conditionDTO.setIconWhatYouCanDo(iconWhatYouCanDo);
        return this;
    }

    /**
     * The key for the what you can do video.
     */
    public ConditionDTOBuilder videoWhatYouCanDo(String videoWhatYouCanDo) {
        conditionDTO.setVideoWhatYouCanDo(videoWhatYouCanDo);
        return this;
    }

    /**
     * The recommendation of the condition.
     */
    public ConditionDTOBuilder recommendation(String recommendation) {
        conditionDTO.setRecommendation(recommendation);
        return this;
    }
    
    /**
     * The ctaHeader of the condition.
     */
    public ConditionDTOBuilder ctaHeader(String ctaHeader) {
        conditionDTO.setCTAHeader(ctaHeader);
        return this;
    }
    
    /**
     * The ctaDescription of the condition.
     */
    public ConditionDTOBuilder ctaDescription(String ctaDescription) {
        conditionDTO.setCTADescription(ctaDescription);
        return this;
    }

    /**
     * The risk header of the conditon.
     */
    public ConditionDTOBuilder risksHeader(String risksHeader) {
        conditionDTO.setRisksHeader(risksHeader);
        return this;
    }

    /**
     * The risks of the condition.
     */
    public ConditionDTOBuilder risks(List<String> risks) {
        conditionDTO.setRisks(risks);
        return this;
    }

    /**
     * The benefits header of the condition.
     */
    public ConditionDTOBuilder benefitsHeader(String benefitsHeader) {
        conditionDTO.setBenefitsHeader(benefitsHeader);
        return this;
    }

    /**
     * The benefits of the condition.
     */
    public ConditionDTOBuilder benefits(List<String> benefits) {
        conditionDTO.setBenefits(benefits);
        return this;
    }

    /**
     * The tip identifiers associated with the condition.
     */
    public ConditionDTOBuilder tipIdentifiers(List<String> tipIdentifiers) {
        conditionDTO.setTipIdentifiers(tipIdentifiers);
        return this;
    }

    /**
     * The tidbit identifiers with the condition.
     */
    public ConditionDTOBuilder tidbitIdentifiers(List<String> tidbitIdentifiers) {
        conditionDTO.setTidbitIdentifiers(tidbitIdentifiers);
        return this;
    }

    /**
     * The while waiting content of the condition.
     */
    public ConditionDTOBuilder whileWaiting(String whileWaiting) {
        conditionDTO.setWhileWaiting(whileWaiting);
        return this;
    }

    /**
     * The feedback flag indicating whether the end-user agrees with the condition.
     */
    public ConditionDTOBuilder conditionFeedback(Boolean conditionFeedback) {
        conditionDTO.setConditionFeedback(conditionFeedback);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public ConditionDTO build() {
        return conditionDTO;
    }
}
