/*
 * SmartSleepAnalyzer
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.philips.ai.models;

import java.util.*;

public class ConditionResultBuilder {
    //the instance to build
    private ConditionResult conditionResult;

    /**
     * Default constructor to initialize the instance
     */
    public ConditionResultBuilder() {
        conditionResult = new ConditionResult();
    }

    public ConditionResultBuilder title(String title) {
        conditionResult.setTitle(title);
        return this;
    }

    public ConditionResultBuilder diagnosis(String diagnosis) {
        conditionResult.setDiagnosis(diagnosis);
        return this;
    }

    public ConditionResultBuilder explanation(String explanation) {
        conditionResult.setExplanation(explanation);
        return this;
    }

    public ConditionResultBuilder description(String description) {
        conditionResult.setDescription(description);
        return this;
    }

    public ConditionResultBuilder living(String living) {
        conditionResult.setLiving(living);
        return this;
    }

    public ConditionResultBuilder videoLiving(String videoLiving) {
        conditionResult.setVideoLiving(videoLiving);
        return this;
    }

    public ConditionResultBuilder iconAbout(String iconAbout) {
        conditionResult.setIconAbout(iconAbout);
        return this;
    }

    public ConditionResultBuilder iconRisks(String iconRisks) {
        conditionResult.setIconRisks(iconRisks);
        return this;
    }

    public ConditionResultBuilder iconWhatYouCanDo(String iconWhatYouCanDo) {
        conditionResult.setIconWhatYouCanDo(iconWhatYouCanDo);
        return this;
    }

    public ConditionResultBuilder videoWhatYouCanDo(String videoWhatYouCanDo) {
        conditionResult.setVideoWhatYouCanDo(videoWhatYouCanDo);
        return this;
    }

    public ConditionResultBuilder recommendation(String recommendation) {
        conditionResult.setRecommendation(recommendation);
        return this;
    }
    
    public ConditionResultBuilder ctaHeader(String ctaHeader) {
    	conditionResult.setCTAHeader(ctaHeader);
        return this;
    }
    
    public ConditionResultBuilder ctaDescription(String ctaDescription) {
    	conditionResult.setCTADescription(ctaDescription);
        return this;
    }

    public ConditionResultBuilder risksHeader(String risksHeader) {
        conditionResult.setRisksHeader(risksHeader);
        return this;
    }

    public ConditionResultBuilder risks(List<String> risks) {
        conditionResult.setRisks(risks);
        return this;
    }

    public ConditionResultBuilder benefitsHeader(String benefitsHeader) {
        conditionResult.setBenefitsHeader(benefitsHeader);
        return this;
    }

    public ConditionResultBuilder benefits(List<String> benefits) {
        conditionResult.setBenefits(benefits);
        return this;
    }

    public ConditionResultBuilder whileWaiting(String whileWaiting) {
        conditionResult.setWhileWaiting(whileWaiting);
        return this;
    }

    public ConditionResultBuilder identifier(String identifier) {
        conditionResult.setIdentifier(identifier);
        return this;
    }

    public ConditionResultBuilder riskRating(Integer riskRating) {
        conditionResult.setRiskRating(riskRating);
        return this;
    }

    public ConditionResultBuilder classification(String classification) {
        conditionResult.setClassification(classification);
        return this;
    }

    public ConditionResultBuilder tipIdentifiers(List<String> tipIdentifiers) {
        conditionResult.setTipIdentifiers(tipIdentifiers);
        return this;
    }

    public ConditionResultBuilder tidbitIdentifiers(List<String> tidbitIdentifiers) {
        conditionResult.setTidbitIdentifiers(tidbitIdentifiers);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public ConditionResult build() {
        return conditionResult;
    }
}
